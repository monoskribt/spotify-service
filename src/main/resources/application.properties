## Set up spotify api
spotify.client-id=${CLIENT_ID:33d3c1e471a94a94b32d99280471ae6d}
spotify.client-secret=${CLIENT_SECRET:e640879a03d041b79d027a283f0a2ebe}
spotify.redirect-url=${REDIRECT_URL:https://spotify.algorithm-challenge.com/api/profile}

spring.security.oauth2.client.registration.spotify.client-id=${spotify.client-id}
spring.security.oauth2.client.registration.spotify.client-secret=${spotify.client-secret}
spring.security.oauth2.client.registration.spotify.redirect-uri=${spotify.redirect-url}
spring.security.oauth2.client.registration.spotify.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.spotify.scope=user-read-private,user-read-email
spring.security.oauth2.client.provider.spotify.authorization-uri=https://accounts.spotify.com/authorize
spring.security.oauth2.client.provider.spotify.token-uri=https://accounts.spotify.com/api/token
spring.security.oauth2.client.provider.spotify.user-info-uri=https://api.spotify.com/v1/me

## Set up database
spring.datasource.url=jdbc:postgresql://localhost:5434/spotify-db
spring.datasource.username=spotify-user
spring.datasource.password=spotify-password
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.ddl-auto=update
spring.datasource.driver-class-name=org.postgresql.Driver

## Set up spring-console
logging.level.org.springframework.security=DEBUG

## Set up rabbitmq
spring.rabbitmq.host=localhost
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
spring.rabbitmq.port=5672
spring.rabbitmq.virtual-host=spotify_delivery_host

rabbitmq.host=spotify_delivery_host
rabbitmq.exchange=spotify_delivery_exchange
rabbitmq.queue=telegram_queue
rabbitmq.routing-key=key_tg

## Set up CORS configure
cors.allowed-origins=https://spotify-service-app-49506.web.app
cors.allowed-methods=GET,POST,DELETE,OPTIONS
cors.allowed-headers=Authorization,Content-Type
cors.allow-credentials=true
cors.max-age=3600
